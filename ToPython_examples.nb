(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     78191,       1617]
NotebookOptionsPosition[     73476,       1540]
NotebookOutlinePosition[     73815,       1555]
CellTagsIndexPosition[     73772,       1552]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"loads", " ", "the", " ", "package"}], " ", "-", " ", 
    RowBox[{"after", " ", "installation"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"Get", "@", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<ToPython.wl\>\""}], 
     "}"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.70181767476367*^9, 3.701817694205203*^9}, {
  3.7018181976937943`*^9, 3.701818211998588*^9}, {3.817007877025469*^9, 
  3.81700790447239*^9}, {3.8172214865707483`*^9, 3.81722149743857*^9}},
 CellLabel->
  "In[472]:=",ExpressionUUID->"ee6242fe-5738-42d7-927d-12c3be9f45f8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ToPython"}]], "Input",
 CellChangeTimes->{{3.70181815383568*^9, 3.7018181578773003`*^9}, 
   3.701818214459565*^9, {3.817118303280854*^9, 3.817118304890544*^9}, {
   3.8171204416196833`*^9, 3.8171204422649813`*^9}},
 CellLabel->
  "In[473]:=",ExpressionUUID->"e8858397-83ae-4bb9-9a33-1b677626ef0c"],

Cell[BoxData[
 TemplateBox[{
  "StringForm","string",
   "\"String expected at position StandardForm[Short[Shallow[HoldForm[1], \
{10, 50}], 5]] in \
StandardForm[Short[Shallow[HoldForm[StringForm[StringReplace[Private`pattern, \
\\\"numpy.\\\" -> Private`np], Sequence @@ Private`PythonForm /@ \
{Private`args}]], {10, 50}], 5]].\"",2,473,253,27645714390632736100,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.817221498990432*^9, 3.817221501035367*^9}},
 CellLabel->
  "During evaluation of \
In[473]:=",ExpressionUUID->"b22115eb-94b6-488c-94c9-44fa98e5cef7"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToPython[expression, numpyprefix, \
copy]\\n\\tconverts Mathematica expression to a Numpy compatible expression. \
Because Numpy can\\n\\tbe imported in several ways, numpyprefix is a string \
that will be added to appended\\n\\tto function names, e.g., Cos->np.cos. If \
copy==True, the result is copied to the clipboard\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Definitions\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Definitions\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Definitions", "Tooltip"]& ], GridBox[{
                    {
                    RowBox[{
                    RowBox[{"ToPython", "[", 
                    RowBox[{"Private`expression_", ",", 
                    RowBox[{"Private`numpyprefix_", ":", "\<\"np\"\>"}], ",", 
                    
                    RowBox[{"Private`copy_", ":", "False"}]}], "]"}], ":=", 
                    RowBox[{"Module", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "Private`result", ",", "Private`greekrule", ",", 
                    "Private`format", ",", "Private`PythonForm", ",", 
                    "Private`np", ",", "Private`a", ",", "Private`b", ",", 
                    "Private`l", ",", "Private`m", ",", "Private`args"}], 
                    "}"}], ",", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"Private`numpyprefix", "\[Equal]", "\<\"\"\>"}], 
                    ",", 
                    RowBox[{"Private`np", "=", "Private`numpyprefix"}], ",", 
                    RowBox[{"Private`np", "=", 
                    RowBox[{"Private`numpyprefix", "<>", "\<\".\"\>"}]}]}], 
                    "]"}], ";", 
                    RowBox[{
                    RowBox[{"Private`format", "[", 
                    RowBox[{"Private`pattern_String", ",", "Private`args__"}],
                     "]"}], ":=", 
                    RowBox[{"ToString", "[", 
                    RowBox[{"StringForm", "[", 
                    RowBox[{
                    RowBox[{"StringReplace", "[", 
                    RowBox[{"Private`pattern", ",", 
                    RowBox[{"\<\"numpy.\"\>", "\[Rule]", "Private`np"}]}], 
                    "]"}], ",", 
                    RowBox[{"Sequence", "@@", 
                    RowBox[{"Private`PythonForm", "/@", 
                    RowBox[{"{", "Private`args", "}"}]}]}]}], "]"}], "]"}]}], 
                    ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"-", "Private`a_"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"-(``)\"\>", ",", "Private`a"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    SuperscriptBox["Private`a_", 
                    RowBox[{"Rational", "[", 
                    RowBox[{"1", ",", "2"}], "]"}]], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"numpy.sqrt(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    FractionBox["Private`a_", "Private`b_"], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"(``) / (``)\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Rational", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"(``) / (``)\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Complex", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"complex(``, ``)\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`a_", " ", "Private`b_"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"(``) * (``)\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`a_", "+", "Private`b_"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"`` + ``\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    SuperscriptBox["Private`a_", "Private`b_"], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"(``) ** (``)\"\>", ",", "Private`a", ",", 
                    "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Exp", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"numpy.exp(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Arg", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"numpy.angle(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"SphericalHarmonicY", "[", 
                    RowBox[{
                    "Private`l_", ",", "Private`m_", ",", "Private`a_", ",", 
                    "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"special.sph_harm(``, ``, (``) % (2 * \
numpy.pi), (``) % numpy.pi)\"\>", ",", "Private`m", ",", "Private`l", ",", 
                    "Private`b", ",", "Private`a"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"BesselI", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"special.iv(``, ``)\"\>", ",", "Private`a", 
                    ",", "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"BesselJ", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"special.jv(``, ``)\"\>", ",", "Private`a", 
                    ",", "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"BesselK", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"special.kn(``, ``)\"\>", ",", "Private`a", 
                    ",", "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"BesselY", "[", 
                    RowBox[{"Private`a_", ",", "Private`b_"}], "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    
                    RowBox[{"\<\"special.yn(``, ``)\"\>", ",", "Private`a", 
                    ",", "Private`b"}], "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Csc", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.sin(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Sec", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.cos(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Cot", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.tan(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Csch", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.sinh(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Sech", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.cosh(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Coth", "[", "Private`a_", "]"}], "]"}], ":=", 
                    RowBox[{"Private`format", "[", 
                    RowBox[{"\<\"1 / numpy.tanh(``)\"\>", ",", "Private`a"}], 
                    "]"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`a_NumericArray", 
                    "]"}], ":=", 
                    RowBox[{"Private`np", "<>", "\<\"array(\"\>", "<>", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Normal", "[", "Private`a", "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"{\"\>", "\[Rule]", "\<\"[\"\>"}], ",", 
                    RowBox[{"\<\"}\"\>", "\[Rule]", "\<\"]\"\>"}]}], "}"}]}], 
                    "]"}], "<>", "\<\")\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"{", "Private`args__", "}"}], "]"}], ":=", 
                    RowBox[{"Private`np", "<>", "\<\"array([\"\>", "<>", 
                    RowBox[{"StringRiffle", "[", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "/@", 
                    RowBox[{"{", "Private`args", "}"}]}], ",", "\<\", \"\>"}],
                     "]"}], "<>", "\<\"])\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", "\[Pi]", "]"}], "=", 
                    RowBox[{"Private`np", "<>", "\<\"pi\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "\[ExponentialE]", "]"}], "=", 
                    
                    RowBox[{"Private`np", "<>", "\<\"e\"\>"}]}], ";", 
                    RowBox[{"Private`greekrule", "=", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"\<\"\[Alpha]\"\>", "\[Rule]", "\<\"alpha\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Beta]\"\>", "\[Rule]", "\<\"beta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Gamma]\"\>", "\[Rule]", "\<\"gamma\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Delta]\"\>", "\[Rule]", "\<\"delta\"\>"}], 
                    ",", 
                    
                    RowBox[{"\<\"\[CurlyEpsilon]\"\>", 
                    "\[Rule]", "\<\"curlyepsilon\"\>"}], ",", 
                    RowBox[{"\<\"\[Zeta]\"\>", "\[Rule]", "\<\"zeta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Eta]\"\>", "\[Rule]", "\<\"eta\"\>"}], ",", 
                    RowBox[{"\<\"\[Theta]\"\>", "\[Rule]", "\<\"theta\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Iota]\"\>", "\[Rule]", "\<\"iota\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Kappa]\"\>", "\[Rule]", "\<\"kappa\"\>"}], 
                    ",", 
                    
                    RowBox[{"\<\"\[Lambda]\"\>", 
                    "\[Rule]", "\<\"lambda\"\>"}], ",", 
                    RowBox[{"\<\"\[Mu]\"\>", "\[Rule]", "\<\"mu\"\>"}], ",", 
                    RowBox[{"\<\"\[Nu]\"\>", "\[Rule]", "\<\"nu\"\>"}], ",", 
                    RowBox[{"\<\"\[Xi]\"\>", "\[Rule]", "\<\"xi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[Omicron]\"\>", 
                    "\[Rule]", "\<\"omicron\"\>"}], ",", 
                    RowBox[{"\<\"\[Pi]\"\>", "\[Rule]", "\<\"pi\"\>"}], ",", 
                    RowBox[{"\<\"\[Rho]\"\>", "\[Rule]", "\<\"rho\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[FinalSigma]\"\>", 
                    "\[Rule]", "\<\"finalsigma\"\>"}], ",", 
                    RowBox[{"\<\"\[Sigma]\"\>", "\[Rule]", "\<\"sigma\"\>"}], 
                    ",", 
                    RowBox[{"\<\"\[Tau]\"\>", "\[Rule]", "\<\"tau\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[Upsilon]\"\>", 
                    "\[Rule]", "\<\"upsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CurlyPhi]\"\>", 
                    "\[Rule]", "\<\"curlyphi\"\>"}], ",", 
                    RowBox[{"\<\"\[Chi]\"\>", "\[Rule]", "\<\"chi\"\>"}], ",", 
                    RowBox[{"\<\"\[Phi]\"\>", "\[Rule]", "\<\"phi\"\>"}], ",", 
                    RowBox[{"\<\"\[Psi]\"\>", "\[Rule]", "\<\"psi\"\>"}], ",", 
                    RowBox[{"\<\"\[Omega]\"\>", "\[Rule]", "\<\"omega\"\>"}], 
                    ",", 
                    
                    RowBox[{"\<\"\[CapitalAlpha]\"\>", 
                    "\[Rule]", "\<\"Alpha\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalBeta]\"\>", 
                    "\[Rule]", "\<\"Beta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalGamma]\"\>", 
                    "\[Rule]", "\<\"Gamma\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalDelta]\"\>", 
                    "\[Rule]", "\<\"Delta\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalEpsilon]\"\>", 
                    "\[Rule]", "\<\"CurlyEpsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalZeta]\"\>", 
                    "\[Rule]", "\<\"Zeta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalEta]\"\>", 
                    "\[Rule]", "\<\"Eta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalTheta]\"\>", 
                    "\[Rule]", "\<\"Theta\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalIota]\"\>", 
                    "\[Rule]", "\<\"Iota\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalKappa]\"\>", 
                    "\[Rule]", "\<\"Kappa\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalLambda]\"\>", 
                    "\[Rule]", "\<\"Lambda\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalMu]\"\>", "\[Rule]", "\<\"Mu\"\>"}],
                     ",", 
                    RowBox[{"\<\"\[CapitalNu]\"\>", "\[Rule]", "\<\"Nu\"\>"}],
                     ",", 
                    RowBox[{"\<\"\[CapitalXi]\"\>", "\[Rule]", "\<\"Xi\"\>"}],
                     ",", 
                    
                    RowBox[{"\<\"\[CapitalOmicron]\"\>", 
                    "\[Rule]", "\<\"Omicron\"\>"}], ",", 
                    RowBox[{"\<\"\[CapitalPi]\"\>", "\[Rule]", "\<\"Pi\"\>"}],
                     ",", 
                    
                    RowBox[{"\<\"\[CapitalRho]\"\>", 
                    "\[Rule]", "\<\"Rho\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalSigma]\"\>", 
                    "\[Rule]", "\<\"Sigma\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalTau]\"\>", 
                    "\[Rule]", "\<\"Tau\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalUpsilon]\"\>", 
                    "\[Rule]", "\<\"Upsilon\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalPhi]\"\>", 
                    "\[Rule]", "\<\"CurlyPhi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalChi]\"\>", 
                    "\[Rule]", "\<\"Chi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalPsi]\"\>", 
                    "\[Rule]", "\<\"Psi\"\>"}], ",", 
                    
                    RowBox[{"\<\"\[CapitalOmega]\"\>", 
                    "\[Rule]", "\<\"Omega\"\>"}]}], "}"}]}], ";", 
                    RowBox[{
                    RowBox[{"Private`PythonForm", "[", 
                    RowBox[{"Private`h_", "[", "Private`args__", "]"}], "]"}],
                     ":=", 
                    RowBox[{"Private`np", "<>", 
                    RowBox[{"ToLowerCase", "[", 
                    RowBox[{"Private`PythonForm", "[", "Private`h", "]"}], 
                    "]"}], "<>", "\<\"(\"\>", "<>", 
                    RowBox[{"Private`PythonForm", "[", "Private`args", "]"}], 
                    "<>", "\<\")\"\>"}]}], ";", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`allOther_", "]"}], ":=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{"ToString", "[", 
                    RowBox[{"Private`allOther", ",", "FortranForm"}], "]"}], 
                    ",", "Private`greekrule"}], "]"}]}], ";", 
                    RowBox[{"Private`result", "=", 
                    RowBox[{"StringReplace", "[", 
                    RowBox[{
                    RowBox[{
                    "Private`PythonForm", "[", "Private`expression", "]"}], 
                    ",", "Private`greekrule"}], "]"}]}], ";", 
                    RowBox[{"If", "[", 
                    RowBox[{"Private`copy", ",", 
                    RowBox[{"CopyToClipboard", "[", "Private`result", "]"}]}],
                     "]"}], ";", "Private`result"}]}], "]"}]}]}
                    },
                    DefaultBaseStyle->"Column",
                    GridBoxAlignment->{"Columns" -> {{Left}}},
                    
                    GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"ToPython`ToPython\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"ToPython[expression, numpyprefix, \
copy]\\n\\tconverts Mathematica expression to a Numpy compatible expression. \
Because Numpy can\\n\\tbe imported in several ways, numpyprefix is a string \
that will be added to appended\\n\\tto function names, e.g., Cos->np.cos. If \
copy==True, the result is copied to the clipboard\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{10., {2., 8.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{10., {2., 8.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "ToPython[expression, numpyprefix, copy]\n\tconverts Mathematica \
expression to a Numpy compatible expression. Because Numpy can\n\tbe imported \
in several ways, numpyprefix is a string that will be added to appended\n\tto \
function names, e.g., Cos->np.cos. If copy==True, the result is copied to the \
clipboard", "Documentation" -> None, "OwnValues" -> None, "UpValues" -> None, 
    "DownValues" -> 
    Information`InformationValueForm[
     DownValues, ToPython`ToPython, {ToPython`ToPython[
         Pattern[Private`expression, 
          Blank[]], 
         Optional[
          Pattern[Private`numpyprefix, 
           Blank[]], "np"], 
         Optional[
          Pattern[Private`copy, 
           Blank[]], False]] :> 
       Module[{Private`result, Private`greekrule, Private`format, 
          Private`PythonForm, Private`np, Private`a, Private`b, Private`l, 
          Private`m, Private`args}, 
         If[Private`numpyprefix == "", Private`np = Private`numpyprefix, 
           Private`np = StringJoin[Private`numpyprefix, "."]]; 
         Private`format[
            Pattern[Private`pattern, 
             Blank[String]], 
            Pattern[Private`args, 
             BlankSequence[]]] := ToString[
            StringForm[
             StringReplace[Private`pattern, "numpy." -> Private`np], 
             Apply[Sequence, 
              Map[Private`PythonForm, {Private`args}]]]]; 
         Private`PythonForm[-Pattern[Private`a, 
              Blank[]]] := Private`format["-(``)", Private`a]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]]^Rational[1, 2]] := 
          Private`format["numpy.sqrt(``)", Private`a]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]]/Pattern[Private`b, 
             Blank[]]] := Private`format["(``) / (``)", Private`a, Private`b]; 
         Private`PythonForm[
            Rational[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["(``) / (``)", Private`a, Private`b]; 
         Private`PythonForm[
            Complex[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["complex(``, ``)", Private`a, Private`b]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]] Pattern[Private`b, 
              Blank[]]] := 
          Private`format["(``) * (``)", Private`a, Private`b]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]] + Pattern[Private`b, 
              Blank[]]] := Private`format["`` + ``", Private`a, Private`b]; 
         Private`PythonForm[Pattern[Private`a, 
              Blank[]]^Pattern[Private`b, 
              Blank[]]] := 
          Private`format["(``) ** (``)", Private`a, Private`b]; 
         Private`PythonForm[
            Exp[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["numpy.exp(``)", Private`a]; 
         Private`PythonForm[
            Arg[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["numpy.angle(``)", Private`a]; 
         Private`PythonForm[
            SphericalHarmonicY[
             Pattern[Private`l, 
              Blank[]], 
             Pattern[Private`m, 
              Blank[]], 
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format[
           "special.sph_harm(``, ``, (``) % (2 * numpy.pi), (``) % numpy.pi)",
             Private`m, Private`l, Private`b, Private`a]; Private`PythonForm[
            BesselI[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["special.iv(``, ``)", Private`a, Private`b]; 
         Private`PythonForm[
            BesselJ[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["special.jv(``, ``)", Private`a, Private`b]; 
         Private`PythonForm[
            BesselK[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["special.kn(``, ``)", Private`a, Private`b]; 
         Private`PythonForm[
            BesselY[
             Pattern[Private`a, 
              Blank[]], 
             Pattern[Private`b, 
              Blank[]]]] := 
          Private`format["special.yn(``, ``)", Private`a, Private`b]; 
         Private`PythonForm[
            Csc[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.sin(``)", Private`a]; 
         Private`PythonForm[
            Sec[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.cos(``)", Private`a]; 
         Private`PythonForm[
            Cot[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.tan(``)", Private`a]; 
         Private`PythonForm[
            Csch[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.sinh(``)", Private`a]; 
         Private`PythonForm[
            Sech[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.cosh(``)", Private`a]; 
         Private`PythonForm[
            Coth[
             Pattern[Private`a, 
              Blank[]]]] := Private`format["1 / numpy.tanh(``)", Private`a]; 
         Private`PythonForm[
            Pattern[Private`a, 
             Blank[NumericArray]]] := StringJoin[Private`np, "array(", 
            StringReplace[
             ToString[
              Normal[Private`a]], {"{" -> "[", "}" -> "]"}], ")"]; 
         Private`PythonForm[{
             Pattern[Private`args, 
              BlankSequence[]]}] := StringJoin[Private`np, "array([", 
            StringRiffle[
             Map[Private`PythonForm, {Private`args}], ", "], "])"]; 
         Private`PythonForm[Pi] = StringJoin[Private`np, "pi"]; 
         Private`PythonForm[E] = StringJoin[Private`np, "e"]; 
         Private`greekrule = {
           "\[Alpha]" -> "alpha", "\[Beta]" -> "beta", "\[Gamma]" -> "gamma", 
            "\[Delta]" -> "delta", "\[CurlyEpsilon]" -> "curlyepsilon", 
            "\[Zeta]" -> "zeta", "\[Eta]" -> "eta", "\[Theta]" -> "theta", 
            "\[Iota]" -> "iota", "\[Kappa]" -> "kappa", "\[Lambda]" -> 
            "lambda", "\[Mu]" -> "mu", "\[Nu]" -> "nu", "\[Xi]" -> "xi", 
            "\[Omicron]" -> "omicron", "\[Pi]" -> "pi", "\[Rho]" -> "rho", 
            "\[FinalSigma]" -> "finalsigma", "\[Sigma]" -> "sigma", "\[Tau]" -> 
            "tau", "\[Upsilon]" -> "upsilon", "\[CurlyPhi]" -> "curlyphi", 
            "\[Chi]" -> "chi", "\[Phi]" -> "phi", "\[Psi]" -> "psi", 
            "\[Omega]" -> "omega", "\[CapitalAlpha]" -> "Alpha", 
            "\[CapitalBeta]" -> "Beta", "\[CapitalGamma]" -> "Gamma", 
            "\[CapitalDelta]" -> "Delta", "\[CapitalEpsilon]" -> 
            "CurlyEpsilon", "\[CapitalZeta]" -> "Zeta", "\[CapitalEta]" -> 
            "Eta", "\[CapitalTheta]" -> "Theta", "\[CapitalIota]" -> "Iota", 
            "\[CapitalKappa]" -> "Kappa", "\[CapitalLambda]" -> "Lambda", 
            "\[CapitalMu]" -> "Mu", "\[CapitalNu]" -> "Nu", "\[CapitalXi]" -> 
            "Xi", "\[CapitalOmicron]" -> "Omicron", "\[CapitalPi]" -> "Pi", 
            "\[CapitalRho]" -> "Rho", "\[CapitalSigma]" -> "Sigma", 
            "\[CapitalTau]" -> "Tau", "\[CapitalUpsilon]" -> "Upsilon", 
            "\[CapitalPhi]" -> "CurlyPhi", "\[CapitalChi]" -> "Chi", 
            "\[CapitalPsi]" -> "Psi", "\[CapitalOmega]" -> "Omega"}; 
         Private`PythonForm[
            Pattern[Private`h, 
             Blank[]][
             Pattern[Private`args, 
              BlankSequence[]]]] := StringJoin[Private`np, 
            ToLowerCase[
             Private`PythonForm[Private`h]], "(", 
            Private`PythonForm[Private`args], ")"]; Private`PythonForm[
            Pattern[Private`allOther, 
             Blank[]]] := StringReplace[
            ToString[Private`allOther, FortranForm], Private`greekrule]; 
         Private`result = StringReplace[
            Private`PythonForm[Private`expression], Private`greekrule]; 
         If[Private`copy, 
           CopyToClipboard[Private`result]]; Private`result]}], "SubValues" -> 
    None, "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> None, "Attributes" -> {}, "FullName" -> "ToPython`ToPython"],
    False]]], "Output",
 CellChangeTimes->{{3.8172214990053673`*^9, 3.817221501079245*^9}},
 CellLabel->
  "Out[473]=",ExpressionUUID->"1636c06c-a822-460f-a863-25991f372296"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expression", " ", "examples"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ToPython", "[", 
    RowBox[{"a", "+", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"a", "*", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"a", "/", "b"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"d", "+", "e", "+", "g"}], ")"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"a", "+", "b"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"d", "+", "e", "+", "g"}], ")"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"Exp", "[", 
     RowBox[{"a", "+", "b"}], "]"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "]"}], "/", 
     RowBox[{"Cos", "[", 
      RowBox[{"d", "+", "e"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"(", 
       RowBox[{"a", "+", "b"}], ")"}], "]"}], "/", 
     RowBox[{"Tanh", "[", 
      RowBox[{"d", "+", "e"}], "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"Cosh", "[", "a", "]"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"Log10", "[", "x", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.8170418609071417`*^9, 3.817041872218865*^9}},
 CellLabel->
  "In[474]:=",ExpressionUUID->"740923fd-dd9e-45ca-b781-36fcddb044a7"],

Cell[BoxData["\<\"a + b\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.817221501088525*^9},
 CellLabel->
  "Out[474]=",ExpressionUUID->"9ebaa684-fe46-462a-aff0-8b3e8b71c040"],

Cell[BoxData["\<\"(a) * (b)\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.817221501089933*^9},
 CellLabel->
  "Out[475]=",ExpressionUUID->"4aeed324-fa34-4764-a151-bd0fa76dae0f"],

Cell[BoxData["\<\"(a) / (b)\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.8172215010912123`*^9},
 CellLabel->
  "Out[476]=",ExpressionUUID->"45235498-a32d-44d0-8d65-6b6758a93b48"],

Cell[BoxData["\<\"(a + b) / (d + e + g)\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.8172215010927362`*^9},
 CellLabel->
  "Out[477]=",ExpressionUUID->"6e2b993a-b8e0-4388-aec9-b34e7db12c53"],

Cell[BoxData["\<\"(a + b) ** (d + e + g)\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.8172215010939903`*^9},
 CellLabel->
  "Out[478]=",ExpressionUUID->"7a90618b-b0cc-4107-93af-4370cae295a1"],

Cell[BoxData["\<\"np.exp(a + b)\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.8172215010952673`*^9},
 CellLabel->
  "Out[479]=",ExpressionUUID->"3a38e060-ab2d-488d-95d9-2cf5582849bc"],

Cell[BoxData["\<\"(1 / np.cos(d + e)) * (np.sin(a + b))\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.817221501096508*^9},
 CellLabel->
  "Out[480]=",ExpressionUUID->"a0e4d9a6-39ad-48cf-889a-b980b53bfaa9"],

Cell[BoxData["\<\"(1 / np.tanh(d + e)) * (np.sin(a + b))\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.817221501097933*^9},
 CellLabel->
  "Out[481]=",ExpressionUUID->"fab82b85-53ae-49e0-9dd5-fff767b76398"],

Cell[BoxData["\<\"(np.pi) * (np.cosh(a))\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.8172215010993032`*^9},
 CellLabel->
  "Out[482]=",ExpressionUUID->"4713a6ca-f7ad-4b93-8f26-2027b99eb868"],

Cell[BoxData["\<\"(np.log(x)) / (np.log(10))\"\>"], "Output",
 CellChangeTimes->{
  3.8170079618499126`*^9, 3.817017895616482*^9, 3.817017983816523*^9, 
   3.8170201763501997`*^9, {3.817020250728732*^9, 3.8170202801446123`*^9}, 
   3.817020709472172*^9, {3.817020843266675*^9, 3.817020860503241*^9}, 
   3.817020908056418*^9, 3.817021002547875*^9, 3.817021046063645*^9, 
   3.8170211622676353`*^9, {3.817024533980084*^9, 3.817024580299947*^9}, {
   3.817028338878491*^9, 3.817028352197442*^9}, {3.817028406999319*^9, 
   3.817028448403741*^9}, 3.8170284877826033`*^9, {3.817029203146287*^9, 
   3.817029257350401*^9}, 3.8170413668493137`*^9, 3.817117457315475*^9, 
   3.81711772982929*^9, 3.817117764596994*^9, 3.817117925017035*^9, {
   3.8171181238081827`*^9, 3.817118161151519*^9}, {3.817118243772114*^9, 
   3.81711826964708*^9}, 3.817118306464034*^9, 3.817118547165819*^9, 
   3.817118586695683*^9, 3.817118721805703*^9, 3.817118779496203*^9, 
   3.8171193610254793`*^9, 3.817120148082315*^9, 3.817120228297722*^9, 
   3.8171205537886877`*^9, 3.817221501100698*^9},
 CellLabel->
  "Out[483]=",ExpressionUUID->"14195488-334a-40c9-818b-83b5a4479008"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Expression", " ", "with", " ", "greek", " ", "letters"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"ToPython", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Alpha]", "+", "\[Beta]"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
   3.817020691587697*^9, 3.817020708510957*^9}, 3.817041875624913*^9},
 CellLabel->
  "In[484]:=",ExpressionUUID->"d695df00-d1d2-4318-b649-f671d424864e"],

Cell[BoxData["\<\"np.sin(alpha + beta)\"\>"], "Output",
 CellChangeTimes->{
  3.817020709939996*^9, {3.817020843631381*^9, 3.817020860873577*^9}, 
   3.817020908436201*^9, 3.817021002914175*^9, 3.8170210464180717`*^9, 
   3.817021162522306*^9, {3.817024534378788*^9, 3.817024580684904*^9}, {
   3.8170283392931213`*^9, 3.817028352588435*^9}, {3.8170284073508787`*^9, 
   3.8170284488670187`*^9}, 3.817028488223117*^9, {3.817029203289201*^9, 
   3.8170292577900677`*^9}, 3.8170413672085533`*^9, 3.817117458569182*^9, 
   3.8171177320053062`*^9, 3.817117765559134*^9, 3.817117925579309*^9, {
   3.817118124478022*^9, 3.817118161948051*^9}, {3.81711824445042*^9, 
   3.8171182704089823`*^9}, 3.817118307771298*^9, 3.817118548160616*^9, 
   3.8171185871564074`*^9, 3.8171187222757463`*^9, 3.817119361375216*^9, 
   3.817120148415263*^9, 3.817120228640048*^9, 3.817120554159154*^9, 
   3.8172215011440477`*^9},
 CellLabel->
  "Out[484]=",ExpressionUUID->"2b27f783-ab30-487e-970a-3002ccd39f7e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Numeric", " ", "examples"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ToPython", "[", "2", "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"1", "/", "3"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"1.0", "/", "3"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", "2.31", "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"2.31", "+", 
     RowBox[{"5.3", "I"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020708510957*^9}, {3.817041939215971*^9, 
  3.817041941599523*^9}},
 CellLabel->
  "In[485]:=",ExpressionUUID->"5185dd86-dec4-4c26-8e48-124321882ccc"],

Cell[BoxData["\<\"2\"\>"], "Output",
 CellChangeTimes->{
  3.8170207100119658`*^9, {3.817020843694008*^9, 3.817020860941473*^9}, 
   3.817020908500248*^9, 3.817021002973975*^9, 3.817021046477701*^9, 
   3.817021162560582*^9, {3.817024534454522*^9, 3.817024580747191*^9}, {
   3.81702833938233*^9, 3.817028352663233*^9}, {3.8170284074093733`*^9, 
   3.8170284489485207`*^9}, 3.817028488299652*^9, {3.817029203307323*^9, 
   3.817029257875527*^9}, 3.8170413672675867`*^9, 3.817117459181082*^9, 
   3.817117732179902*^9, 3.817117765702503*^9, 3.8171179256500483`*^9, {
   3.817118124563301*^9, 3.817118162239683*^9}, {3.8171182445027533`*^9, 
   3.8171182706679697`*^9}, 3.8171185482396517`*^9, 3.8171185872405653`*^9, 
   3.8171187227226667`*^9, 3.8171193614337587`*^9, 3.817120148467301*^9, 
   3.817120228690184*^9, 3.817120554224353*^9, 3.81722150115379*^9},
 CellLabel->
  "Out[485]=",ExpressionUUID->"a5d72474-45e3-42a8-84fc-3ce479f977e9"],

Cell[BoxData["\<\"(1) / (3)\"\>"], "Output",
 CellChangeTimes->{
  3.8170207100119658`*^9, {3.817020843694008*^9, 3.817020860941473*^9}, 
   3.817020908500248*^9, 3.817021002973975*^9, 3.817021046477701*^9, 
   3.817021162560582*^9, {3.817024534454522*^9, 3.817024580747191*^9}, {
   3.81702833938233*^9, 3.817028352663233*^9}, {3.8170284074093733`*^9, 
   3.8170284489485207`*^9}, 3.817028488299652*^9, {3.817029203307323*^9, 
   3.817029257875527*^9}, 3.8170413672675867`*^9, 3.817117459181082*^9, 
   3.817117732179902*^9, 3.817117765702503*^9, 3.8171179256500483`*^9, {
   3.817118124563301*^9, 3.817118162239683*^9}, {3.8171182445027533`*^9, 
   3.8171182706679697`*^9}, 3.8171185482396517`*^9, 3.8171185872405653`*^9, 
   3.8171187227226667`*^9, 3.8171193614337587`*^9, 3.817120148467301*^9, 
   3.817120228690184*^9, 3.817120554224353*^9, 3.817221501155706*^9},
 CellLabel->
  "Out[486]=",ExpressionUUID->"4a63b942-aaf2-44a4-a883-4ea8faa0861d"],

Cell[BoxData["\<\"0.3333333333333333\"\>"], "Output",
 CellChangeTimes->{
  3.8170207100119658`*^9, {3.817020843694008*^9, 3.817020860941473*^9}, 
   3.817020908500248*^9, 3.817021002973975*^9, 3.817021046477701*^9, 
   3.817021162560582*^9, {3.817024534454522*^9, 3.817024580747191*^9}, {
   3.81702833938233*^9, 3.817028352663233*^9}, {3.8170284074093733`*^9, 
   3.8170284489485207`*^9}, 3.817028488299652*^9, {3.817029203307323*^9, 
   3.817029257875527*^9}, 3.8170413672675867`*^9, 3.817117459181082*^9, 
   3.817117732179902*^9, 3.817117765702503*^9, 3.8171179256500483`*^9, {
   3.817118124563301*^9, 3.817118162239683*^9}, {3.8171182445027533`*^9, 
   3.8171182706679697`*^9}, 3.8171185482396517`*^9, 3.8171185872405653`*^9, 
   3.8171187227226667`*^9, 3.8171193614337587`*^9, 3.817120148467301*^9, 
   3.817120228690184*^9, 3.817120554224353*^9, 3.817221501157053*^9},
 CellLabel->
  "Out[487]=",ExpressionUUID->"493b88b9-175d-4d29-a291-941871690a0f"],

Cell[BoxData["\<\"2.31\"\>"], "Output",
 CellChangeTimes->{
  3.8170207100119658`*^9, {3.817020843694008*^9, 3.817020860941473*^9}, 
   3.817020908500248*^9, 3.817021002973975*^9, 3.817021046477701*^9, 
   3.817021162560582*^9, {3.817024534454522*^9, 3.817024580747191*^9}, {
   3.81702833938233*^9, 3.817028352663233*^9}, {3.8170284074093733`*^9, 
   3.8170284489485207`*^9}, 3.817028488299652*^9, {3.817029203307323*^9, 
   3.817029257875527*^9}, 3.8170413672675867`*^9, 3.817117459181082*^9, 
   3.817117732179902*^9, 3.817117765702503*^9, 3.8171179256500483`*^9, {
   3.817118124563301*^9, 3.817118162239683*^9}, {3.8171182445027533`*^9, 
   3.8171182706679697`*^9}, 3.8171185482396517`*^9, 3.8171185872405653`*^9, 
   3.8171187227226667`*^9, 3.8171193614337587`*^9, 3.817120148467301*^9, 
   3.817120228690184*^9, 3.817120554224353*^9, 3.817221501158277*^9},
 CellLabel->
  "Out[488]=",ExpressionUUID->"91e04fd9-e8e7-4ecd-9310-0c8e17eec4f5"],

Cell[BoxData["\<\"complex(2.31, 5.3)\"\>"], "Output",
 CellChangeTimes->{
  3.8170207100119658`*^9, {3.817020843694008*^9, 3.817020860941473*^9}, 
   3.817020908500248*^9, 3.817021002973975*^9, 3.817021046477701*^9, 
   3.817021162560582*^9, {3.817024534454522*^9, 3.817024580747191*^9}, {
   3.81702833938233*^9, 3.817028352663233*^9}, {3.8170284074093733`*^9, 
   3.8170284489485207`*^9}, 3.817028488299652*^9, {3.817029203307323*^9, 
   3.817029257875527*^9}, 3.8170413672675867`*^9, 3.817117459181082*^9, 
   3.817117732179902*^9, 3.817117765702503*^9, 3.8171179256500483`*^9, {
   3.817118124563301*^9, 3.817118162239683*^9}, {3.8171182445027533`*^9, 
   3.8171182706679697`*^9}, 3.8171185482396517`*^9, 3.8171185872405653`*^9, 
   3.8171187227226667`*^9, 3.8171193614337587`*^9, 3.817120148467301*^9, 
   3.817120228690184*^9, 3.817120554224353*^9, 3.817221501159684*^9},
 CellLabel->
  "Out[489]=",ExpressionUUID->"1105038c-bd34-4532-9950-84832a4a3bd0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Array", " ", "handling"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ToPython", "[", 
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "}"}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{"Cos", "[", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020703952483*^9}, {3.817042042716785*^9, 
  3.817042043976235*^9}},
 CellLabel->
  "In[490]:=",ExpressionUUID->"292185a9-2fb5-4cee-ba04-979e10b4d536"],

Cell[BoxData["\<\"np.array([1, 2, 3])\"\>"], "Output",
 CellChangeTimes->{{3.8170245748017673`*^9, 3.8170245809447937`*^9}, {
   3.817028339751727*^9, 3.817028353030599*^9}, {3.8170284077016983`*^9, 
   3.817028449212926*^9}, 3.8170284885677423`*^9, {3.817029203388771*^9, 
   3.817029258147233*^9}, 3.8170413674919043`*^9, 3.817117460343004*^9, 
   3.8171177331512823`*^9, 3.817117766165606*^9, 3.817117925907926*^9, {
   3.817118124965405*^9, 3.817118162405219*^9}, {3.817118244717517*^9, 
   3.8171182709055777`*^9}, 3.8171185485073566`*^9, 3.817118587520198*^9, 
   3.81711872322711*^9, 3.817119361642866*^9, 3.817120148650282*^9, 
   3.817120228873178*^9, 3.817120554573254*^9, 3.8172215012067623`*^9},
 CellLabel->
  "Out[490]=",ExpressionUUID->"3561d280-ce88-4428-802b-9ea2d53d0820"],

Cell[BoxData["\<\"np.array([np.array([1, 2, 3])])\"\>"], "Output",
 CellChangeTimes->{{3.8170245748017673`*^9, 3.8170245809447937`*^9}, {
   3.817028339751727*^9, 3.817028353030599*^9}, {3.8170284077016983`*^9, 
   3.817028449212926*^9}, 3.8170284885677423`*^9, {3.817029203388771*^9, 
   3.817029258147233*^9}, 3.8170413674919043`*^9, 3.817117460343004*^9, 
   3.8171177331512823`*^9, 3.817117766165606*^9, 3.817117925907926*^9, {
   3.817118124965405*^9, 3.817118162405219*^9}, {3.817118244717517*^9, 
   3.8171182709055777`*^9}, 3.8171185485073566`*^9, 3.817118587520198*^9, 
   3.81711872322711*^9, 3.817119361642866*^9, 3.817120148650282*^9, 
   3.817120228873178*^9, 3.817120554573254*^9, 3.817221501208187*^9},
 CellLabel->
  "Out[491]=",ExpressionUUID->"ef63b7aa-3345-4373-b5ab-4e7ac0c110f8"],

Cell[BoxData["\<\"np.array([np.cos(1), np.cos(2), np.cos(3)])\"\>"], "Output",
 CellChangeTimes->{{3.8170245748017673`*^9, 3.8170245809447937`*^9}, {
   3.817028339751727*^9, 3.817028353030599*^9}, {3.8170284077016983`*^9, 
   3.817028449212926*^9}, 3.8170284885677423`*^9, {3.817029203388771*^9, 
   3.817029258147233*^9}, 3.8170413674919043`*^9, 3.817117460343004*^9, 
   3.8171177331512823`*^9, 3.817117766165606*^9, 3.817117925907926*^9, {
   3.817118124965405*^9, 3.817118162405219*^9}, {3.817118244717517*^9, 
   3.8171182709055777`*^9}, 3.8171185485073566`*^9, 3.817118587520198*^9, 
   3.81711872322711*^9, 3.817119361642866*^9, 3.817120148650282*^9, 
   3.817120228873178*^9, 3.817120554573254*^9, 3.8172215012095137`*^9},
 CellLabel->
  "Out[492]=",ExpressionUUID->"7d28757d-f24d-43eb-a129-e976b3e359af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Example", " ", "with", " ", "numpy", " ", "as", " ", "numpy"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"\[Pi]", " ", 
      RowBox[{
       RowBox[{"Cosh", "[", "a", "]"}], "/", 
       RowBox[{"Sin", "[", "b", "]"}]}]}], ",", "\"\<numpy\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"a", "+", "b"}], "]"}], ",", "\"\<numpy\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", 
     "\"\<numpy\>\""}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020699758286*^9}, {3.817042046873148*^9, 
  3.817042048134284*^9}},
 CellLabel->
  "In[493]:=",ExpressionUUID->"f6527cd2-52e4-49a6-9b6c-bc9c98edc4bd"],

Cell[BoxData["\<\"(numpy.pi) * ((numpy.cosh(a)) * (1 / numpy.sin(b)))\"\>"], \
"Output",
 CellChangeTimes->{
  3.817020710468717*^9, {3.8170208440716887`*^9, 3.8170208613185062`*^9}, 
   3.817020908871052*^9, 3.817021003304357*^9, 3.817021046854567*^9, 
   3.817021163048211*^9, {3.817024535082407*^9, 3.817024581071865*^9}, {
   3.817028340028767*^9, 3.817028353297617*^9}, {3.8170284078770447`*^9, 
   3.817028449433552*^9}, 3.8170284887871304`*^9, {3.817029203431119*^9, 
   3.8170292583948107`*^9}, 3.817041367622568*^9, 3.817117462737858*^9, 
   3.817117733723543*^9, 3.817117766441349*^9, 3.817117926063861*^9, {
   3.817118125185322*^9, 3.817118162497962*^9}, {3.817118244836355*^9, 
   3.817118271034617*^9}, 3.817118548686082*^9, 3.8171185876966*^9, 
   3.817118723407547*^9, 3.817119361813582*^9, 3.8171201487739477`*^9, 
   3.817120228992448*^9, 3.817120554719812*^9, 3.817221501218149*^9},
 CellLabel->
  "Out[493]=",ExpressionUUID->"0fec5571-628d-45d0-9fdc-4aace99b09c9"],

Cell[BoxData["\<\"numpy.exp(a + b)\"\>"], "Output",
 CellChangeTimes->{
  3.817020710468717*^9, {3.8170208440716887`*^9, 3.8170208613185062`*^9}, 
   3.817020908871052*^9, 3.817021003304357*^9, 3.817021046854567*^9, 
   3.817021163048211*^9, {3.817024535082407*^9, 3.817024581071865*^9}, {
   3.817028340028767*^9, 3.817028353297617*^9}, {3.8170284078770447`*^9, 
   3.817028449433552*^9}, 3.8170284887871304`*^9, {3.817029203431119*^9, 
   3.8170292583948107`*^9}, 3.817041367622568*^9, 3.817117462737858*^9, 
   3.817117733723543*^9, 3.817117766441349*^9, 3.817117926063861*^9, {
   3.817118125185322*^9, 3.817118162497962*^9}, {3.817118244836355*^9, 
   3.817118271034617*^9}, 3.817118548686082*^9, 3.8171185876966*^9, 
   3.817118723407547*^9, 3.817119361813582*^9, 3.8171201487739477`*^9, 
   3.817120228992448*^9, 3.817120554719812*^9, 3.8172215012198677`*^9},
 CellLabel->
  "Out[494]=",ExpressionUUID->"21a8c0ae-a810-4498-9481-9383bb70587f"],

Cell[BoxData["\<\"numpy.array([numpy.cos(1), numpy.cos(2), \
numpy.cos(3)])\"\>"], "Output",
 CellChangeTimes->{
  3.817020710468717*^9, {3.8170208440716887`*^9, 3.8170208613185062`*^9}, 
   3.817020908871052*^9, 3.817021003304357*^9, 3.817021046854567*^9, 
   3.817021163048211*^9, {3.817024535082407*^9, 3.817024581071865*^9}, {
   3.817028340028767*^9, 3.817028353297617*^9}, {3.8170284078770447`*^9, 
   3.817028449433552*^9}, 3.8170284887871304`*^9, {3.817029203431119*^9, 
   3.8170292583948107`*^9}, 3.817041367622568*^9, 3.817117462737858*^9, 
   3.817117733723543*^9, 3.817117766441349*^9, 3.817117926063861*^9, {
   3.817118125185322*^9, 3.817118162497962*^9}, {3.817118244836355*^9, 
   3.817118271034617*^9}, 3.817118548686082*^9, 3.8171185876966*^9, 
   3.817118723407547*^9, 3.817119361813582*^9, 3.8171201487739477`*^9, 
   3.817120228992448*^9, 3.817120554719812*^9, 3.817221501221229*^9},
 CellLabel->
  "Out[495]=",ExpressionUUID->"a9ae6d10-fe41-499d-8abd-5770046b7c77"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Example", " ", "with", " ", "numpy", " ", "as", " ", 
    "\"\<from numpy import *\>\""}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"\[Pi]", " ", 
      RowBox[{
       RowBox[{"Cosh", "[", "a", "]"}], "/", 
       RowBox[{"Sin", "[", "b", "]"}]}]}], ",", "\"\<\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Exp", "[", 
      RowBox[{"a", "+", "b"}], "]"}], ",", "\"\<\>\""}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ToPython", "[", 
    RowBox[{
     RowBox[{"Cos", "[", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}], ",", "\"\<\>\""}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.817007935108295*^9, 3.817007961051466*^9}, {
  3.817020691587697*^9, 3.817020694983716*^9}},
 CellLabel->
  "In[496]:=",ExpressionUUID->"5515cb8d-3b4a-4f07-909f-e82f28173e96"],

Cell[BoxData["\<\"(pi) * ((cosh(a)) * (1 / sin(b)))\"\>"], "Output",
 CellChangeTimes->{
  3.701817713973694*^9, {3.8170079069610767`*^9, 3.817007942002098*^9}, 
   3.817017895999034*^9, 3.817017984217103*^9, 3.817020177318646*^9, {
   3.817020251443091*^9, 3.817020280515452*^9}, 3.8170207106406937`*^9, {
   3.8170208442535152`*^9, 3.817020861499098*^9}, 3.817020909054863*^9, 
   3.8170210034457693`*^9, 3.8170210470405293`*^9, 3.8170211631230164`*^9, {
   3.8170245352103024`*^9, 3.817024581268499*^9}, {3.817028340261648*^9, 
   3.817028353531391*^9}, {3.817028408157876*^9, 3.817028449591357*^9}, 
   3.817028488968322*^9, {3.8170292034849358`*^9, 3.8170292585757*^9}, 
   3.817041367904071*^9, 3.817117463485156*^9, 3.817117734400022*^9, 
   3.817117766821602*^9, 3.817117926214613*^9, {3.817118125400936*^9, 
   3.817118163661817*^9}, {3.817118244951786*^9, 3.817118271721352*^9}, 
   3.8171185494308767`*^9, 3.817118587871388*^9, 3.817118724128471*^9, 
   3.8171193620400543`*^9, 3.817120148895418*^9, 3.81712022911053*^9, 
   3.817120554860915*^9, 3.817221501265861*^9},
 CellLabel->
  "Out[496]=",ExpressionUUID->"2da68cbe-b871-4a7f-99f6-5d66bff6053d"],

Cell[BoxData["\<\"exp(a + b)\"\>"], "Output",
 CellChangeTimes->{
  3.701817713973694*^9, {3.8170079069610767`*^9, 3.817007942002098*^9}, 
   3.817017895999034*^9, 3.817017984217103*^9, 3.817020177318646*^9, {
   3.817020251443091*^9, 3.817020280515452*^9}, 3.8170207106406937`*^9, {
   3.8170208442535152`*^9, 3.817020861499098*^9}, 3.817020909054863*^9, 
   3.8170210034457693`*^9, 3.8170210470405293`*^9, 3.8170211631230164`*^9, {
   3.8170245352103024`*^9, 3.817024581268499*^9}, {3.817028340261648*^9, 
   3.817028353531391*^9}, {3.817028408157876*^9, 3.817028449591357*^9}, 
   3.817028488968322*^9, {3.8170292034849358`*^9, 3.8170292585757*^9}, 
   3.817041367904071*^9, 3.817117463485156*^9, 3.817117734400022*^9, 
   3.817117766821602*^9, 3.817117926214613*^9, {3.817118125400936*^9, 
   3.817118163661817*^9}, {3.817118244951786*^9, 3.817118271721352*^9}, 
   3.8171185494308767`*^9, 3.817118587871388*^9, 3.817118724128471*^9, 
   3.8171193620400543`*^9, 3.817120148895418*^9, 3.81712022911053*^9, 
   3.817120554860915*^9, 3.817221501267376*^9},
 CellLabel->
  "Out[497]=",ExpressionUUID->"db330b4b-cd09-44e2-87b3-fb587b0d46a7"],

Cell[BoxData["\<\"array([cos(1), cos(2), cos(3)])\"\>"], "Output",
 CellChangeTimes->{
  3.701817713973694*^9, {3.8170079069610767`*^9, 3.817007942002098*^9}, 
   3.817017895999034*^9, 3.817017984217103*^9, 3.817020177318646*^9, {
   3.817020251443091*^9, 3.817020280515452*^9}, 3.8170207106406937`*^9, {
   3.8170208442535152`*^9, 3.817020861499098*^9}, 3.817020909054863*^9, 
   3.8170210034457693`*^9, 3.8170210470405293`*^9, 3.8170211631230164`*^9, {
   3.8170245352103024`*^9, 3.817024581268499*^9}, {3.817028340261648*^9, 
   3.817028353531391*^9}, {3.817028408157876*^9, 3.817028449591357*^9}, 
   3.817028488968322*^9, {3.8170292034849358`*^9, 3.8170292585757*^9}, 
   3.817041367904071*^9, 3.817117463485156*^9, 3.817117734400022*^9, 
   3.817117766821602*^9, 3.817117926214613*^9, {3.817118125400936*^9, 
   3.817118163661817*^9}, {3.817118244951786*^9, 3.817118271721352*^9}, 
   3.8171185494308767`*^9, 3.817118587871388*^9, 3.817118724128471*^9, 
   3.8171193620400543`*^9, 3.817120148895418*^9, 3.81712022911053*^9, 
   3.817120554860915*^9, 3.817221501268681*^9},
 CellLabel->
  "Out[498]=",ExpressionUUID->"31a2badb-4ff2-45c2-85fb-f4d19a070949"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"Special", " ", "functions"}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{"ToPython", "[", 
   RowBox[{"SphericalHarmonicY", "[", 
    RowBox[{"l", ",", "m", ",", "\[Theta]", ",", "\[Phi]"}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8171174664415627`*^9, 3.8171175150332823`*^9}},
 CellLabel->
  "In[499]:=",ExpressionUUID->"0e4529e0-9456-4a42-870d-172c1748c68e"],

Cell[BoxData["\<\"special.sph_harm(m, l, (phi) % (2 * np.pi), (theta) % \
np.pi)\"\>"], "Output",
 CellChangeTimes->{
  3.817117484416253*^9, 3.817117515459223*^9, 3.8171177354212723`*^9, 
   3.817117767276486*^9, 3.817117926428712*^9, {3.817118125834436*^9, 
   3.817118163867025*^9}, {3.817118245185507*^9, 3.8171182719355516`*^9}, 
   3.817118549663563*^9, 3.817118588150755*^9, 3.817118724445963*^9, 
   3.817119362174696*^9, 3.817120149009636*^9, 3.8171202292314253`*^9, 
   3.817120554997981*^9, 3.8172215012754307`*^9},
 CellLabel->
  "Out[499]=",ExpressionUUID->"0f4a749f-c6e3-405a-a6f8-034849c79990"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython", "[", 
  RowBox[{"Sqrt", "[", "a", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.817120078799831*^9, 3.817120082942841*^9}},
 CellLabel->
  "In[500]:=",ExpressionUUID->"0ae939ea-d5e9-419b-999a-64601c326ce5"],

Cell[BoxData["\<\"np.sqrt(a)\"\>"], "Output",
 CellChangeTimes->{3.817120083304699*^9, 3.817120149058948*^9, 
  3.817120229284362*^9, 3.8171205550598392`*^9, 3.817221501320984*^9},
 CellLabel->
  "Out[500]=",ExpressionUUID->"44fbe59f-49fc-45d5-a4ef-4850587e95af"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["ListQ"], "Input",
 CellChangeTimes->{{3.8171328962132483`*^9, 3.817132896774466*^9}},
 CellLabel->
  "In[501]:=",ExpressionUUID->"de8058ea-0d69-4077-8817-1853b6fa296c"],

Cell[BoxData["ListQ"], "Output",
 CellChangeTimes->{3.817221501328431*^9},
 CellLabel->
  "Out[501]=",ExpressionUUID->"896cf3fa-21e5-4da4-9897-54df45c95f4e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", 
    RowBox[{"a", "+", "b", "+", 
     RowBox[{"Sin", "[", "x", "]"}]}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.8171328786925697`*^9, 3.8171328909644003`*^9}},
 CellLabel->
  "In[502]:=",ExpressionUUID->"096db8ac-16bc-4502-968b-388523b12c99"],

Cell[BoxData["\<\"np.array([1, 2, a + b + np.sin(x)])\"\>"], "Output",
 CellChangeTimes->{{3.81713288271318*^9, 3.8171328912871323`*^9}, 
   3.817221501377017*^9},
 CellLabel->
  "Out[502]=",ExpressionUUID->"a6bb2ed9-655b-49dc-903a-9fe6676dcb2f"]
}, Open  ]]
},
WindowSize->{808, 701},
WindowMargins->{{316, Automatic}, {149, Automatic}},
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 690, 16, 52, "Input",ExpressionUUID->"ee6242fe-5738-42d7-927d-12c3be9f45f8"],
Cell[CellGroupData[{
Cell[1273, 40, 327, 6, 30, "Input",ExpressionUUID->"e8858397-83ae-4bb9-9a33-1b677626ef0c"],
Cell[1603, 48, 587, 12, 60, "Message",ExpressionUUID->"b22115eb-94b6-488c-94c9-44fa98e5cef7"],
Cell[2193, 62, 36453, 780, 167, "Output",ExpressionUUID->"1636c06c-a822-460f-a863-25991f372296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38683, 847, 1824, 50, 241, "Input",ExpressionUUID->"740923fd-dd9e-45ca-b781-36fcddb044a7"],
Cell[40510, 899, 1132, 17, 34, "Output",ExpressionUUID->"9ebaa684-fe46-462a-aff0-8b3e8b71c040"],
Cell[41645, 918, 1136, 17, 34, "Output",ExpressionUUID->"4aeed324-fa34-4764-a151-bd0fa76dae0f"],
Cell[42784, 937, 1138, 17, 34, "Output",ExpressionUUID->"45235498-a32d-44d0-8d65-6b6758a93b48"],
Cell[43925, 956, 1150, 17, 34, "Output",ExpressionUUID->"6e2b993a-b8e0-4388-aec9-b34e7db12c53"],
Cell[45078, 975, 1151, 17, 34, "Output",ExpressionUUID->"7a90618b-b0cc-4107-93af-4370cae295a1"],
Cell[46232, 994, 1142, 17, 34, "Output",ExpressionUUID->"3a38e060-ab2d-488d-95d9-2cf5582849bc"],
Cell[47377, 1013, 1164, 17, 34, "Output",ExpressionUUID->"a0e4d9a6-39ad-48cf-889a-b980b53bfaa9"],
Cell[48544, 1032, 1165, 17, 34, "Output",ExpressionUUID->"fab82b85-53ae-49e0-9dd5-fff767b76398"],
Cell[49712, 1051, 1151, 17, 34, "Output",ExpressionUUID->"4713a6ca-f7ad-4b93-8f26-2027b99eb868"],
Cell[50866, 1070, 1153, 17, 34, "Output",ExpressionUUID->"14195488-334a-40c9-818b-83b5a4479008"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52056, 1092, 486, 11, 52, "Input",ExpressionUUID->"d695df00-d1d2-4318-b649-f671d424864e"],
Cell[52545, 1105, 988, 15, 34, "Output",ExpressionUUID->"2b27f783-ab30-487e-970a-3002ccd39f7e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53570, 1125, 787, 18, 136, "Input",ExpressionUUID->"5185dd86-dec4-4c26-8e48-124321882ccc"],
Cell[54360, 1145, 942, 14, 34, "Output",ExpressionUUID->"a5d72474-45e3-42a8-84fc-3ce479f977e9"],
Cell[55305, 1161, 951, 14, 34, "Output",ExpressionUUID->"4a63b942-aaf2-44a4-a883-4ea8faa0861d"],
Cell[56259, 1177, 960, 14, 34, "Output",ExpressionUUID->"493b88b9-175d-4d29-a291-941871690a0f"],
Cell[57222, 1193, 946, 14, 34, "Output",ExpressionUUID->"91e04fd9-e8e7-4ecd-9310-0c8e17eec4f5"],
Cell[58171, 1209, 960, 14, 34, "Output",ExpressionUUID->"1105038c-bd34-4532-9950-84832a4a3bd0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[59168, 1228, 799, 21, 94, "Input",ExpressionUUID->"292185a9-2fb5-4cee-ba04-979e10b4d536"],
Cell[59970, 1251, 790, 11, 34, "Output",ExpressionUUID->"3561d280-ce88-4428-802b-9ea2d53d0820"],
Cell[60763, 1264, 800, 11, 34, "Output",ExpressionUUID->"ef63b7aa-3345-4373-b5ab-4e7ac0c110f8"],
Cell[61566, 1277, 814, 11, 34, "Output",ExpressionUUID->"7d28757d-f24d-43eb-a129-e976b3e359af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62417, 1293, 1003, 28, 94, "Input",ExpressionUUID->"f6527cd2-52e4-49a6-9b6c-bc9c98edc4bd"],
Cell[63423, 1323, 984, 15, 34, "Output",ExpressionUUID->"0fec5571-628d-45d0-9fdc-4aace99b09c9"],
Cell[64410, 1340, 949, 14, 34, "Output",ExpressionUUID->"21a8c0ae-a810-4498-9481-9383bb70587f"],
Cell[65362, 1356, 988, 15, 34, "Output",ExpressionUUID->"a9ae6d10-fe41-499d-8abd-5770046b7c77"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66387, 1376, 965, 28, 94, "Input",ExpressionUUID->"5515cb8d-3b4a-4f07-909f-e82f28173e96"],
Cell[67355, 1406, 1163, 17, 34, "Output",ExpressionUUID->"2da68cbe-b871-4a7f-99f6-5d66bff6053d"],
Cell[68521, 1425, 1140, 17, 34, "Output",ExpressionUUID->"db330b4b-cd09-44e2-87b3-fb587b0d46a7"],
Cell[69664, 1444, 1161, 17, 34, "Output",ExpressionUUID->"31a2badb-4ff2-45c2-85fb-f4d19a070949"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70862, 1466, 438, 11, 52, "Input",ExpressionUUID->"0e4529e0-9456-4a42-870d-172c1748c68e"],
Cell[71303, 1479, 609, 10, 34, "Output",ExpressionUUID->"0f4a749f-c6e3-405a-a6f8-034849c79990"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71949, 1494, 241, 5, 30, "Input",ExpressionUUID->"0ae939ea-d5e9-419b-999a-64601c326ce5"],
Cell[72193, 1501, 263, 4, 34, "Output",ExpressionUUID->"44fbe59f-49fc-45d5-a4ef-4850587e95af"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72493, 1510, 182, 3, 30, "Input",ExpressionUUID->"de8058ea-0d69-4077-8817-1853b6fa296c"],
Cell[72678, 1515, 157, 3, 34, "Output",ExpressionUUID->"896cf3fa-21e5-4da4-9897-54df45c95f4e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72872, 1523, 339, 8, 30, "Input",ExpressionUUID->"096db8ac-16bc-4502-968b-388523b12c99"],
Cell[73214, 1533, 246, 4, 34, "Output",ExpressionUUID->"a6bb2ed9-655b-49dc-903a-9fe6676dcb2f"]
}, Open  ]]
}
]
*)

